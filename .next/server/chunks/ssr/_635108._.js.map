{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelsalama/Documents/Michael/chrome/nearestmountain/nearest-mountain/app/page.js"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\nexport default function Home() {\n    const [latitude, setLatitude] = useState(null);\n    const [longitude, setLongitude] = useState(null);\n    const [nearestMountain, setNearestMountain] = useState(null);\n    const [elevation, setElevation] = useState(150); // Default elevation set to 500ft (~150m)\n\n    useEffect(() => {\n        if (\"geolocation\" in navigator && latitude === null && longitude === null) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setLatitude(position.coords.latitude);\n                setLongitude(position.coords.longitude);\n            });\n        }\n    }, [latitude, longitude]); // Only trigger if latitude or longitude change\n\n    useEffect(() => {\n        if (latitude && longitude) {\n            fetch(`/api/nearestMountain?lat=${latitude}&lon=${longitude}&minElevation=${elevation}`)\n                .then((res) => res.json())\n                .then((data) => setNearestMountain(data))\n                .catch((error) => console.error(\"Error fetching data:\", error));\n        }\n    }, [latitude, longitude, elevation]); // Trigger when latitude, longitude, or elevation changes\n\n    const handleElevationChange = (event) => {\n        setElevation(event.target.value);\n    };\n\n    const handleLatitudeChange = (event) => {\n        setLatitude(event.target.value);\n    };\n\n    const handleLongitudeChange = (event) => {\n        setLongitude(event.target.value);\n    };\n\n    return (\n        <div className=\"full-container\">\n            <div className=\"app-container\">\n                <h1>Find the Nearest Mountain &#127956;</h1>\n                {latitude && longitude ? (\n                    <div className=\"location\">\n                        <p>\n                            Your Location: \n                            <input\n                                type=\"number\"\n                                value={latitude || ''}\n                                onChange={handleLatitudeChange}\n                                step=\"any\"\n                                placeholder=\"Enter latitude\"\n                                className=\"coord\"\n                            /> \n                            , \n                            <input\n                                type=\"number\"\n                                value={longitude || ''}\n                                onChange={handleLongitudeChange}\n                                step=\"any\"\n                                placeholder=\"Enter longitude\"\n                                className=\"coord\"\n                            />\n                        </p>\n                    </div>\n                ) : (\n                    <p>Fetching location...</p>\n                )}\n                \n                <div className=\"elevation-control\">\n                    <label htmlFor=\"elevation\">Desired Elevation (meters): </label>\n                    <input\n                        type=\"number\"\n                        id=\"elevation\"\n                        value={elevation}\n                        onChange={handleElevationChange}\n                        min=\"0\"\n                        placeholder=\"Enter elevation in meters\"\n                        className=\"elevation-input\"\n                    />\n                </div>\n                \n                {nearestMountain ? (\n                    <div className=\"mountain-info\">\n                        <p><strong>Nearest Mountain Range:<br></br>{nearestMountain.name}</strong></p>\n                        <p>Location: {nearestMountain.latitude}, {nearestMountain.longitude}</p>\n                        <p>Distance: {nearestMountain.distance_km} kilometers away</p>\n                        <p>Unit: {nearestMountain.map_unit}</p>\n                        <p><strong>Elevation: </strong>{nearestMountain.elevation_high}m</p>\n                        <p>\n                            <a\n                                href={`https://www.google.com/maps?q=${nearestMountain.latitude},${nearestMountain.longitude}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"google-map-link\"\n                            >\n                            &#9968; View on Google Maps &#9968;\n                            </a>\n                        </p>\n                    </div>\n                ) : (\n                    <p>Loading nearest mountain...</p>\n                )}\n\n                \n            </div>\n            <div className=\"citation\">\n                    <p>\n                    Dataset:<br />Snethlage, M.A., Geschke, J., Spehn, E.M., Ranipeta, A., Yoccoz, N.G., KÃ¶rner, Ch., Jetz, W., Fischer, M. & Urbach, D. GMBA Mountain Inventory v2. GMBA-EarthEnv. https://doi.org/10.48601/earthenv-t9k2-1407 (2022).\n                    </p>\n                </div>\n        </div>\n        \n    );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelsalama/Documents/Michael/chrome/nearestmountain/nearest-mountain/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}